<launch>
    <rosparam file="$(find architecture)/cfg/realUav_params.yaml" command="load" />
    <arg name="world_frame_name"    default="world"/>
    <arg name="uav_frame_name" default="base_link"/>
    <arg name="hokuyo_frame_name"   default="hokuyo"/>


    <!-- #######################  Octomap  ######################################## -->
    <node pkg="octomap_server" type="octomap_server_node" name="octomap_builder" output="screen">
        <param name="frame_id" type="string" value="map" />   
        <remap from="cloud_in" to="/free_cloud" />
        <!-- <remap from="cloud_in" to="/velodyne_points" /> -->
        <param name="latch" value="false" />
        <param name="resolution" value="0.2" />
        <param name="pointcloud_min" value="0"/>
        <param name="pointcloud_max" value="2"/>
        <param name="occupancy_min" value="1"/>
        <param name="publish_free_space" value="true"/>
        <param name="sensor_model/max_range" value="10"/>
        <param name="sensor_model/hit" value="0.7"/>
        <param name="sensor_model/miss" value="0.3"/>
    </node>


    <!-- #######################  Architecture nodes  ############################# -->
    <node name="laser_filter" type="scan_to_scan_filter_chain" pkg="laser_filters">
        <rosparam command="load" file="$(find architecture)/cfg/realUav_params.yaml" />
        <param name="target_frame"   value="scan" />
        <remap from="base_scan" to="scan" />
    </node>
    <node pkg="laser_free_to_cloud" type="free_cloud_node" name="free_cloud" >
        <param name="range_min" value="1"/>
    </node>
    <node name="mav_comms"          type="mav_comms_node"       pkg="architecture"  output="screen" />
    <node name="state_manager"      type="state_manager_node"   pkg="architecture"  output="screen" />
    <node name="frontier_cells"     type="frontiers_async_node" pkg="frontiers"     output="screen" />
    <node name="lazy_theta_star"    type="ltStar_async_node"    pkg="path_planning" output="screen" />
    <node name="middle_man_current_position" type="current_position_provider_node" pkg="architecture"  output="screen" />

    <include file="$(find mavros)/launch/px4.launch">
        <arg name="fcu_url" value="/dev/ttyUSB0:921600" />
    </include>


    <!-- #######################    TF    ############################# -->    
    <!-- <node pkg="architecture" type="gps_utm_tf_broadcaster_node" name="gps_utm_tf_broadcaster" /> -->
    <node pkg="tf" type="static_transform_publisher" name="local_position_to_hokuyo" args="0.21 0 -0.22 0 -0.872665 0 base_link laser 100" />
    <node pkg="tf" type="static_transform_publisher" name="world_to_map" args="0 0 0 0 0 0 1 world map 100" />


    <!-- #######################  Hokuyo  ############################# -->
    <node name="hokuyo"         pkg="urg_node"      type="urg_node" output="screen" >
        <param name="ip_address" value="192.168.0.10"/>
    </node>


    <!-- #######################    Log   ############################# -->
    <node pkg="rosbag" type="record" name="rosbag_record_all"
       args="record -O /ros_ws/src/data/record_all.bag /tf /scan /mavros/global_position/local /mavros/global_position/global /tf /mavros/global_position/local /mavros/global_position/global /occupied_cells_vis_array /free_cells_vis_array /ltstar_path /frontiers_reply /frontiers_request /ltstar_request /ltstar_reply /mavros/setpoint_position/local "/>  
</launch>

