#include <gtest/gtest.h>
#include <frontiers.h>
#include <neighbors.h>
#include <ordered_neighbors.h>

namespace Frontiers
{
	void printForMatlab(std::unordered_set<std::shared_ptr<octomath::Vector3>> neighbors)
	{
		std::cout << " x_values = [ ];\n";
		std::cout << " y_values = [ ];\n";
		std::cout << " z_values = [ ];\n";
		for (std::shared_ptr<octomath::Vector3> n : neighbors)
		{
			std::cout << " x_values = [x_values, " << n->x() << "];\n ";
			std::cout << " y_values = [y_values, " << n->y() << "];\n ";
			std::cout << " z_values = [z_values, " << n->z() << "];\n ";
		}
	}

	TEST(OctreeNeighborTest, NeighborTest_generateFromRealData_Depth13)
	{
		// ARRANGE
		// std::list<octomath::Vector3> right_answers =
		// { 
		// 	octomath::Vector3(11.1, -0.1, -0.1),
		// 	octomath::Vector3(11.1, -0.1, 1.7),
		// 	octomath::Vector3(11.1, -1.7, 1.5),
		// 	octomath::Vector3(11.1, 0.1, 1.5),
		// 	octomath::Vector3(11.3, -0.1, 1.5),
		// 	octomath::Vector3(9.5, -0.1, 1.5),
		// 	octomath::Vector3(11.1, -0.3, -0.1),
		// 	octomath::Vector3(11.1, -0.3, 1.7),
		// 	octomath::Vector3(11.1, -1.7, 1.3),
		// 	octomath::Vector3(11.1, 0.1, 1.3),
		// 	octomath::Vector3(11.3, -0.1, 1.3),
		// 	octomath::Vector3(9.5, -0.1, 1.3),
		// 	octomath::Vector3(11.1, -0.5, -0.1),
		// 	octomath::Vector3(11.1, -0.5, 1.7),
		// 	octomath::Vector3(11.1, -1.7, 1.1),
		// 	octomath::Vector3(11.1, 0.1, 1.1),
		// 	octomath::Vector3(11.3, -0.1, 1.1),
		// 	octomath::Vector3(9.5, -0.1, 1.1),
		// 	octomath::Vector3(11.1, -0.7, -0.1),
		// 	octomath::Vector3(11.1, -0.7, 1.7),
		// 	octomath::Vector3(11.1, -1.7, 0.9),
		// 	octomath::Vector3(11.1, 0.1, 0.9),
		// 	octomath::Vector3(11.3, -0.1, 0.9),
		// 	octomath::Vector3(9.5, -0.1, 0.5),
		// 	octomath::Vector3(11.1, -1.3, -0.1),
		// 	octomath::Vector3(11.1, -1.3, 1.7),
		// 	octomath::Vector3(11.1, -1.7, 0.3),
		// 	octomath::Vector3(11.1, 0.1, 0.3),
		// 	octomath::Vector3(11.3, -0.1, 0.3),
		// 	octomath::Vector3(9.5, -0.1, 0.3),
		// 	octomath::Vector3(11.1, -1.5, -0.1),
		// 	octomath::Vector3(11.1, -1.5, 1.7),
		// 	octomath::Vector3(11.1, -1.7, 0.1),
		// 	octomath::Vector3(11.1, 0.1, 0.1),
		// 	octomath::Vector3(11.3, -0.1, 0.1),
		// 	octomath::Vector3(9.5, -0.1, 0.1),
		// 	octomath::Vector3(10.9, -0.1, -0.1),
		// 	octomath::Vector3(10.9, -0.1, 1.7),
		// 	octomath::Vector3(10.9, -1.7, 1.5),
		// 	octomath::Vector3(10.9, 0.1, 1.5),
		// 	octomath::Vector3(11.3, -0.3, 1.5),
		// 	octomath::Vector3(10.9, -1.7, 1.3),
		// 	octomath::Vector3(10.9, 0.1, 1.3),
		// 	octomath::Vector3(11.3, -0.3, 1.3),
		// 	octomath::Vector3(9.5, -0.3, 1.3),
		// 	octomath::Vector3(10.9, -0.5, -0.1),
		// 	octomath::Vector3(10.9, -0.5, 1.7),
		// 	octomath::Vector3(10.9, -1.7, 1.1),
		// 	octomath::Vector3(10.9, 0.1, 1.1),
		// 	octomath::Vector3(11.3, -0.3, 1.1),
		// 	octomath::Vector3(9.5, -0.3, 1.1),
		// 	octomath::Vector3(10.9, -0.7, -0.1),
		// 	octomath::Vector3(10.9, -0.7, 1.7),
		// 	octomath::Vector3(10.9, -1.7, 0.9),
		// 	octomath::Vector3(10.9, 0.1, 0.9),
		// 	octomath::Vector3(11.3, -0.3, 0.9),
		// 	octomath::Vector3(9.5, -0.3, 0.9),
		// 	octomath::Vector3(10.9, -0.9, -0.1),
		// 	octomath::Vector3(10.9, -0.9, 1.7),
		// 	octomath::Vector3(10.9, -1.7, 0.7),
		// 	octomath::Vector3(10.9, 0.1, 0.7),
		// 	octomath::Vector3(11.3, -0.3, 0.7),
		// 	octomath::Vector3(9.5, -0.3, 0.7),
		// 	octomath::Vector3(10.9, -1.1, -0.1),
		// 	octomath::Vector3(10.9, -1.1, 1.7),
		// 	octomath::Vector3(10.9, -1.7, 0.5),
		// 	octomath::Vector3(10.9, 0.1, 0.5),
		// 	octomath::Vector3(11.3, -0.3, 0.5),
		// 	octomath::Vector3(9.5, -0.3, 0.5),
		// 	octomath::Vector3(10.9, -1.3, -0.1),
		// 	octomath::Vector3(10.9, -1.3, 1.7),
		// 	octomath::Vector3(10.9, -1.7, 0.3),
		// 	octomath::Vector3(10.9, 0.1, 0.3),
		// 	octomath::Vector3(11.3, -0.3, 0.3),
		// 	octomath::Vector3(9.5, -0.3, 0.3),
		// 	octomath::Vector3(10.9, -1.5, -0.1),
		// 	octomath::Vector3(10.9, -1.5, 1.7),
		// 	octomath::Vector3(9.5, -0.3, 0.1),
		// 	octomath::Vector3(10.7, -0.1, -0.1),
		// 	octomath::Vector3(10.7, -0.1, 1.7),
		// 	octomath::Vector3(10.7, -1.7, 1.5),
		// 	octomath::Vector3(10.7, 0.1, 1.5),
		// 	octomath::Vector3(11.3, -0.5, 1.5),
		// 	octomath::Vector3(9.5, -0.5, 1.5),
		// 	octomath::Vector3(10.7, -0.3, -0.1),
		// 	octomath::Vector3(10.7, -0.3, 1.7),
		// 	octomath::Vector3(10.7, -1.7, 1.3),
		// 	octomath::Vector3(10.7, 0.1, 1.3),
		// 	octomath::Vector3(11.3, -0.5, 1.3),
		// 	octomath::Vector3(9.5, -0.5, 1.3),
		// 	octomath::Vector3(10.7, -0.5, -0.1),
		// 	octomath::Vector3(10.7, -0.5, 1.7),
		// 	octomath::Vector3(9.5, -0.7, 0.3),
		// 	octomath::Vector3(11.1, -1.1, -0.1),
		// 	octomath::Vector3(9.5, -1.1, 0.5),
		// 	octomath::Vector3(10.5, -0.3, 1.7),
		// 	octomath::Vector3(9.5, -0.9, 0.5),
		// 	octomath::Vector3(11.1, -1.1, 1.7),
		// 	octomath::Vector3(10.1, -1.3, -0.1),
		// 	octomath::Vector3(10.5, -1.7, 1.3),
		// 	octomath::Vector3(10.3, -1.3, -0.1),
		// 	octomath::Vector3(11.1, -1.7, 0.5),
		// 	octomath::Vector3(10.1, -1.3, 1.7),
		// 	octomath::Vector3(10.5, 0.1, 1.3),
		// 	octomath::Vector3(10.3, -1.3, 1.7),
		// 	octomath::Vector3(11.1, 0.1, 0.5),
		// 	octomath::Vector3(10.1, -1.7, 0.3),
		// 	octomath::Vector3(11.3, -0.7, 1.3),
		// 	octomath::Vector3(10.3, -1.7, 0.3),
		// 	octomath::Vector3(11.3, -0.1, 0.5),
		// 	octomath::Vector3(10.1, 0.1, 0.3),
		// 	octomath::Vector3(9.5, -0.7, 1.3),
		// 	octomath::Vector3(10.3, 0.1, 0.3),
		// 	octomath::Vector3(10.5, -0.5, -0.1),
		// 	octomath::Vector3(11.3, -0.9, 0.3),
		// 	octomath::Vector3(9.9, -0.3, -0.1),
		// 	octomath::Vector3(10.5, -0.5, 1.7),
		// 	octomath::Vector3(9.5, -0.9, 0.3),
		// 	octomath::Vector3(9.9, -0.3, 1.7),
		// 	octomath::Vector3(10.5, -1.7, 1.1),
		// 	octomath::Vector3(10.3, -1.5, -0.1),
		// 	octomath::Vector3(9.9, -1.7, 1.3),
		// 	octomath::Vector3(10.5, 0.1, 1.1),
		// 	octomath::Vector3(10.3, -1.5, 1.7),
		// 	octomath::Vector3(9.9, 0.1, 1.3),
		// 	octomath::Vector3(10.3, -1.7, 0.1),
		// 	octomath::Vector3(11.3, -1.3, 1.3),
		// 	octomath::Vector3(10.3, 0.1, 0.1),
		// 	octomath::Vector3(9.5, -1.3, 1.3),
		// 	octomath::Vector3(11.3, -0.9, 0.1),
		// 	octomath::Vector3(9.9, -0.5, -0.1),
		// 	octomath::Vector3(9.5, -0.9, 0.1),
		// 	octomath::Vector3(9.9, -0.5, 1.7),
		// 	octomath::Vector3(10.1, -0.1, -0.1),
		// 	octomath::Vector3(9.9, -1.7, 1.1),
		// 	octomath::Vector3(10.1, -0.1, 1.7),
		// 	octomath::Vector3(9.9, 0.1, 1.1),
		// 	octomath::Vector3(10.1, -1.7, 1.5),
		// 	octomath::Vector3(11.3, -1.3, 1.1),
		// 	octomath::Vector3(10.1, 0.1, 1.5),
		// 	octomath::Vector3(9.5, -1.3, 1.1),
		// 	octomath::Vector3(11.3, -1.1, 1.5),
		// 	octomath::Vector3(9.9, -0.7, -0.1),
		// 	octomath::Vector3(9.5, -1.1, 1.5),
		// 	octomath::Vector3(9.9, -0.7, 1.7),
		// 	octomath::Vector3(10.1, -0.3, -0.1),
		// 	octomath::Vector3(9.9, -1.7, 0.9),
		// 	octomath::Vector3(10.1, -0.3, 1.7),
		// 	octomath::Vector3(9.9, 0.1, 0.9),
		// 	octomath::Vector3(10.1, -1.7, 1.3),
		// 	octomath::Vector3(11.3, -1.3, 0.9),
		// 	octomath::Vector3(10.1, 0.1, 1.3),
		// 	octomath::Vector3(9.5, -1.3, 0.9),
		// 	octomath::Vector3(11.3, -1.1, 1.3),
		// 	octomath::Vector3(9.9, -0.9, -0.1),
		// 	octomath::Vector3(9.5, -1.1, 1.3),
		// 	octomath::Vector3(9.9, -0.9, 1.7),
		// 	octomath::Vector3(10.1, -0.5, -0.1),
		// 	octomath::Vector3(9.9, -1.7, 0.7),
		// 	octomath::Vector3(10.1, -0.5, 1.7),
		// 	octomath::Vector3(9.9, 0.1, 0.7),
		// 	octomath::Vector3(10.1, -1.7, 1.1),
		// 	octomath::Vector3(11.3, -1.3, 0.7),
		// 	octomath::Vector3(10.1, 0.1, 1.1),
		// 	octomath::Vector3(9.5, -1.3, 0.7),
		// 	octomath::Vector3(11.3, -1.1, 1.1),
		// 	octomath::Vector3(9.9, -1.1, -0.1),
		// 	octomath::Vector3(9.5, -1.1, 1.1),
		// 	octomath::Vector3(11.3, -0.7, 1.1),
		// 	octomath::Vector3(9.9, -1.5, 1.7),
		// 	octomath::Vector3(9.5, -0.7, 1.1),
		// 	octomath::Vector3(9.9, -1.7, 0.1),
		// 	octomath::Vector3(10.5, -0.7, -0.1),
		// 	octomath::Vector3(9.9, 0.1, 0.1),
		// 	octomath::Vector3(10.5, -0.7, 1.7),
		// 	octomath::Vector3(11.3, -1.3, 0.1),
		// 	octomath::Vector3(10.5, -1.7, 0.9),
		// 	octomath::Vector3(9.5, -1.3, 0.1),
		// 	octomath::Vector3(10.5, 0.1, 0.9),
		// 	octomath::Vector3(9.7, -0.1, -0.1),
		// 	octomath::Vector3(9.9, -1.1, 1.7),
		// 	octomath::Vector3(10.1, -0.7, -0.1),
		// 	octomath::Vector3(9.7, -0.1, 1.7),
		// 	octomath::Vector3(10.5, -0.9, 1.7),
		// 	octomath::Vector3(11.3, -1.5, 0.7),
		// 	octomath::Vector3(10.5, -1.7, 0.7),
		// 	octomath::Vector3(9.5, -1.5, 0.7),
		// 	octomath::Vector3(10.5, 0.1, 0.7),
		// 	octomath::Vector3(9.7, -1.1, -0.1),
		// 	octomath::Vector3(11.3, -0.7, 0.7),
		// 	octomath::Vector3(9.7, -1.1, 1.7),
		// 	octomath::Vector3(9.5, -0.7, 0.7),
		// 	octomath::Vector3(9.7, -1.7, 0.5),
		// 	octomath::Vector3(10.5, -1.1, -0.1),
		// 	octomath::Vector3(9.7, 0.1, 0.5),
		// 	octomath::Vector3(10.5, -1.1, 1.7),
		// 	octomath::Vector3(11.3, -1.5, 0.5),
		// 	octomath::Vector3(10.5, -1.7, 0.5),
		// 	octomath::Vector3(9.5, -1.5, 0.5),
		// 	octomath::Vector3(10.5, 0.1, 0.5),
		// 	octomath::Vector3(9.7, -1.3, -0.1),
		// 	octomath::Vector3(10.5, -1.3, 1.7),
		// 	octomath::Vector3(9.7, -1.3, 1.7),
		// 	octomath::Vector3(10.5, -0.9, -0.1),
		// 	octomath::Vector3(9.7, 0.1, 0.7),
		// 	octomath::Vector3(9.5, -1.3, 1.5),
		// 	octomath::Vector3(9.5, -1.5, 0.1),
		// 	octomath::Vector3(9.9, -1.3, -0.1),
		// 	octomath::Vector3(9.5, -1.1, 0.9),
		// 	octomath::Vector3(9.7, -0.3, -0.1),
		// 	octomath::Vector3(9.5, -0.7, 0.9),
		// 	octomath::Vector3(9.7, -1.7, 0.7),
		// 	octomath::Vector3(11.3, -1.3, 1.5),
		// 	octomath::Vector3(11.3, -1.5, 0.1),
		// 	octomath::Vector3(9.5, -1.3, 0.5),
		// 	octomath::Vector3(11.3, -1.1, 0.9),
		// 	octomath::Vector3(9.5, -1.5, 1.5),
		// 	octomath::Vector3(9.9, 0.1, 1.5),
		// 	octomath::Vector3(9.7, 0.1, 0.1),
		// 	octomath::Vector3(11.3, -1.3, 0.5),
		// 	octomath::Vector3(10.1, 0.1, 0.9),
		// 	octomath::Vector3(11.3, -1.5, 1.5),
		// 	octomath::Vector3(9.9, -1.7, 1.5),
		// 	octomath::Vector3(9.7, -1.7, 0.1),
		// 	octomath::Vector3(9.9, 0.1, 0.5),
		// 	octomath::Vector3(10.1, -1.7, 0.9),
		// 	octomath::Vector3(9.7, 0.1, 1.5),
		// 	octomath::Vector3(9.9, -0.1, 1.7),
		// 	octomath::Vector3(9.7, -1.5, 1.7),
		// 	octomath::Vector3(9.9, -1.7, 0.5),
		// 	octomath::Vector3(10.1, -0.7, 1.7),
		// 	octomath::Vector3(9.7, -1.7, 1.5),
		// 	octomath::Vector3(9.9, -0.1, -0.1),
		// 	octomath::Vector3(9.7, -1.5, -0.1),
		// 	octomath::Vector3(11.3, -0.7, 0.3),
		// 	octomath::Vector3(11.3, -1.5, 0.3),
		// 	octomath::Vector3(10.5, 0.1, 0.3),
		// 	octomath::Vector3(9.7, 0.1, 0.3),
		// 	octomath::Vector3(10.5, -1.7, 0.3),
		// 	octomath::Vector3(9.7, -1.7, 0.3),
		// 	octomath::Vector3(11.3, -0.7, 0.9),
		// 	octomath::Vector3(9.7, -0.9, 1.7),
		// 	octomath::Vector3(10.5, -1.3, -0.1),
		// 	octomath::Vector3(9.7, -0.9, -0.1),
		// 	octomath::Vector3(9.5, -0.7, 0.5),
		// 	octomath::Vector3(9.5, -1.5, 0.9),
		// 	octomath::Vector3(11.3, -0.7, 0.5),
		// 	octomath::Vector3(11.3, -1.5, 0.9),
		// 	octomath::Vector3(9.7, 0.1, 0.9),
		// 	octomath::Vector3(9.7, -1.7, 0.9),
		// 	octomath::Vector3(9.7, -0.7, 1.7),
		// 	octomath::Vector3(9.7, -0.7, -0.1),
		// 	octomath::Vector3(9.5, -1.5, 1.1),
		// 	octomath::Vector3(11.3, -1.5, 1.1),
		// 	octomath::Vector3(9.7, 0.1, 1.1),
		// 	octomath::Vector3(9.7, -1.7, 1.1),
		// 	octomath::Vector3(9.7, -0.5, 1.7),
		// 	octomath::Vector3(9.9, -1.5, -0.1),
		// 	octomath::Vector3(9.7, -0.5, -0.1),
		// 	octomath::Vector3(9.5, -1.3, 0.3),
		// 	octomath::Vector3(9.5, -1.5, 1.3),
		// 	octomath::Vector3(11.3, -1.3, 0.3),
		// 	octomath::Vector3(10.1, 0.1, 0.7),
		// 	octomath::Vector3(11.3, -1.5, 1.3),
		// 	octomath::Vector3(9.9, 0.1, 0.3),
		// 	octomath::Vector3(10.1, -1.7, 0.7),
		// 	octomath::Vector3(9.7, 0.1, 1.3),
		// 	octomath::Vector3(9.9, -1.7, 0.3),
		// 	octomath::Vector3(10.1, -0.9, 1.7),
		// 	octomath::Vector3(9.9, -1.3, 1.7),
		// 	octomath::Vector3(10.1, -0.9, -0.1),
		// 	octomath::Vector3(9.7, -0.3, 1.7),
		// 	octomath::Vector3(9.5, -1.5, 0.3),
		// 	octomath::Vector3(9.5, -1.1, 0.1),
		// 	octomath::Vector3(9.5, -0.1, 0.7),
		// 	octomath::Vector3(11.3, -1.1, 0.5),
		// 	octomath::Vector3(10.5, -0.3, -0.1),
		// 	octomath::Vector3(11.3, -0.9, 0.5),
		// 	octomath::Vector3(9.7, -1.7, 1.3),
		// 	octomath::Vector3(11.3, -1.1, 0.1),
		// 	octomath::Vector3(10.7, -1.7, 0.7),
		// 	octomath::Vector3(10.3, -0.3, -0.1),
		// 	octomath::Vector3(11.3, -0.3, 0.1),
		// 	octomath::Vector3(10.1, 0.1, 0.1),
		// 	octomath::Vector3(10.9, 0.1, 0.1),
		// 	octomath::Vector3(10.1, -1.7, 0.1),
		// 	octomath::Vector3(10.9, -1.7, 0.1),
		// 	octomath::Vector3(10.1, -1.5, 1.7),
		// 	octomath::Vector3(10.9, -0.3, 1.7),
		// 	octomath::Vector3(10.1, -1.5, -0.1),
		// 	octomath::Vector3(10.9, -0.3, -0.1),
		// 	octomath::Vector3(9.5, -1.1, 0.3),
		// 	octomath::Vector3(9.5, -0.3, 1.5),
		// 	octomath::Vector3(11.3f, -1.1f, 0.3f),
		// 	octomath::Vector3(11.3, -0.1, 0.7),
		// 	octomath::Vector3(10.1, 0.1, 0.5),
		// 	octomath::Vector3(9.5, -0.7, 1.5),
		// 	octomath::Vector3(10.3, 0.1, 0.5),
		// 	octomath::Vector3(11.1, 0.1, 0.7),
		// 	octomath::Vector3(10.1, -1.7, 0.5),
		// 	octomath::Vector3(11.3, -0.7, 1.5),
		// 	octomath::Vector3(10.3, -1.7, 0.5),
		// 	octomath::Vector3(11.1, -1.7, 0.7),
		// 	octomath::Vector3(10.1, -1.1, 1.7),
		// 	octomath::Vector3(10.5, 0.1, 1.5),
		// 	octomath::Vector3(10.3, -1.1, 1.7),
		// 	octomath::Vector3(11.1, -0.9, 1.7),
		// 	octomath::Vector3(10.1, -1.1, -0.1),
		// 	octomath::Vector3(10.5, -1.7, 1.5),
		// 	octomath::Vector3(10.3, -1.1, -0.1),
		// 	octomath::Vector3(11.1, -0.9, -0.1),
		// 	octomath::Vector3(9.5, -1.1, 0.7),
		// 	octomath::Vector3(10.5, -0.1, 1.7),
		// 	octomath::Vector3(9.5, -0.9, 0.7),
		// 	octomath::Vector3(9.5, -0.1, 0.9),
		// 	octomath::Vector3(11.3, -1.1, 0.7),
		// 	octomath::Vector3(10.5, -0.1, -0.1),
		// 	octomath::Vector3(11.3, -0.9, 0.7),
		// 	octomath::Vector3(9.5, -0.5, 0.1),
		// 	octomath::Vector3(10.3, 0.1, 0.7),
		// 	octomath::Vector3(11.3, -0.5, 0.1),
		// 	octomath::Vector3(10.3, -1.7, 0.7),
		// 	octomath::Vector3(10.7, 0.1, 0.1),
		// 	octomath::Vector3(10.3, -0.9, 1.7),
		// 	octomath::Vector3(10.7, -1.7, 0.1),
		// 	octomath::Vector3(10.3, -0.9, -0.1),
		// 	octomath::Vector3(10.7, -1.5, 1.7),
		// 	octomath::Vector3(9.5, -0.9, 0.9),
		// 	octomath::Vector3(10.7, -1.5, -0.1),
		// 	octomath::Vector3(11.3, -0.9, 0.9),
		// 	octomath::Vector3(9.5, -0.5, 0.3),
		// 	octomath::Vector3(10.3, 0.1, 0.9),
		// 	octomath::Vector3(11.3, -0.5, 0.3),
		// 	octomath::Vector3(10.3, -1.7, 0.9),
		// 	octomath::Vector3(10.7, 0.1, 0.3),
		// 	octomath::Vector3(10.3, -0.7, 1.7),
		// 	octomath::Vector3(10.7, -1.7, 0.3),
		// 	octomath::Vector3(10.3, -0.7, -0.1),
		// 	octomath::Vector3(10.7, -1.3, 1.7),
		// 	octomath::Vector3(9.5, -0.9, 1.1),
		// 	octomath::Vector3(10.7, -1.3, -0.1),
		// 	octomath::Vector3(11.3, -0.9, 1.1),
		// 	octomath::Vector3(9.5, -0.5, 0.5),
		// 	octomath::Vector3(10.3, 0.1, 1.1),
		// 	octomath::Vector3(11.3, -0.5, 0.5),
		// 	octomath::Vector3(10.3, -1.7, 1.1),
		// 	octomath::Vector3(10.7, 0.1, 0.5),
		// 	octomath::Vector3(10.3, -0.5, 1.7),
		// 	octomath::Vector3(10.7, -1.7, 0.5),
		// 	octomath::Vector3(10.3, -0.5, -0.1),
		// 	octomath::Vector3(10.7, -1.1, 1.7),
		// 	octomath::Vector3(9.5, -0.9, 1.3),
		// 	octomath::Vector3(10.7, -1.1, -0.1),
		// 	octomath::Vector3(11.3, -0.9, 1.3),
		// 	octomath::Vector3(9.5, -0.5, 0.7),
		// 	octomath::Vector3(10.3, 0.1, 1.3),
		// 	octomath::Vector3(11.3, -0.5, 0.7),
		// 	octomath::Vector3(10.3, -1.7, 1.3),
		// 	octomath::Vector3(10.7, 0.1, 0.7),
		// 	octomath::Vector3(10.3, -0.3, 1.7),
		// 	octomath::Vector3(10.7, -0.9, 1.7),
		// 	octomath::Vector3(9.5, -0.9, 1.5),
		// 	octomath::Vector3(10.7, -0.9, -0.1),
		// 	octomath::Vector3(11.3, -0.9, 1.5),
		// 	octomath::Vector3(9.5, -0.5, 0.9),
		// 	octomath::Vector3(10.3, 0.1, 1.5),
		// 	octomath::Vector3(11.3, -0.5, 0.9),
		// 	octomath::Vector3(10.3, -1.7, 1.5),
		// 	octomath::Vector3(10.7, 0.1, 0.9),
		// 	octomath::Vector3(10.3, -0.1, 1.7),
		// 	octomath::Vector3(10.7, -1.7, 0.9),
		// 	octomath::Vector3(10.3, -0.1, -0.1),
		// 	octomath::Vector3(10.7, -0.7, 1.7),
		// 	octomath::Vector3(9.5, -0.7, 0.1),
		// 	octomath::Vector3(10.7, -0.7, -0.1),
		// 	octomath::Vector3(11.3, -0.7, 0.1),
		// 	octomath::Vector3(9.5, -0.5, 1.1),
		// 	octomath::Vector3(10.5, 0.1, 0.1),
		// 	octomath::Vector3(11.3, -0.5, 1.1),
		// 	octomath::Vector3(10.5, -1.7, 0.1),
		// 	octomath::Vector3(10.7, 0.1, 1.1),
		// 	octomath::Vector3(10.5, -1.5, 1.7),
		// 	octomath::Vector3(10.7, -1.7, 1.1),
		// 	octomath::Vector3(10.5, -1.5, -0.1)
		// } ;
		std::unordered_set<std::shared_ptr<octomath::Vector3>> neighbors_us;
		octomap::OcTree octree ("data/circle_1m.bt");
		double sidelength_lookup_table  [octree.getTreeDepth()];
	   	LazyThetaStarOctree::fillLookupTable(octree.getResolution(), octree.getTreeDepth(), sidelength_lookup_table); 
		octomath::Vector3 point_coordinates (10.4f, -0.8f, 0.8f);
		octomap::OcTreeKey point_key = octree.coordToKey(point_coordinates);
		int depth = LazyThetaStarOctree::getNodeDepth_Octomap(point_key, octree);
		EXPECT_EQ(13, depth);
		double node_size = octree.getNodeSize(depth); // in meters
		EXPECT_EQ(1.6, node_size);
		float resolution = octree.getResolution();
		EXPECT_FLOAT_EQ(0.2, resolution);
		// ACT
		octomath::Vector3 cell_center_coordinates = LazyThetaStarOctree::getCellCenter(point_coordinates, octree);
		LazyThetaStarOctree::generateNeighbors_pointers_sparse(octree, sidelength_lookup_table, neighbors_us, cell_center_coordinates, node_size, resolution, false);
		// printForTesting(neighbors_us);
		printForMatlab(neighbors_us);
		// ASSERT
		EXPECT_EQ(cell_center_coordinates, 
			octomath::Vector3 (10.4f, -0.8f, 0.8f));	
		EXPECT_EQ(384, neighbors_us.size());
		// EXPECT_EQ(384, right_answers.size());
		// ASSERT_TRUE (allNeighborsAreCorrect(neighbors_us, right_answers));
	}
}

int main(int argc, char **argv){
  testing::InitGoogleTest(&argc, argv);
  return RUN_ALL_TESTS();
}