<!-- The MIT License (MIT) Copyright (c) 2016 GRVC University of Seville Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software
without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. -->
<launch>
  <!-- Configurable options -->
  <arg name="robot_model" default="mbzirc"/>
  <arg name="id" default="1"/>
  <arg name="mode" default="sitl"/>
  <arg name="material" default="Orange"/>
  <arg name="target_ip" default="localhost"/>
  <arg name="own_ip" default="localhost"/>
  <arg name="ns_prefix" default="uav_"/>

  <group if="$(eval mode == 'sitl')">
    <!-- Spawn model in Gazebo -->
    <node pkg="px4_bringup" type="spawn_gzmodel.py" name="spawn_gzmodel_$(arg id)" output="screen" args="-model=$(arg robot_model) -id=$(arg id) -material=$(arg material)"/>

    <!-- Run px4 controller -->
    <!-- Important parameter cwd="node", px4 link generation may cause errors otherwise -->
    <node pkg="px4_bringup" type="run_px4sitl.py" cwd="node" name="run_px4sitl_$(arg id)" output="screen" args="-model=$(arg robot_model) -id=$(arg id)"/>
  </group>

  <!-- Run mavros node -->
  <node pkg="px4_bringup" type="run_mavros.py" name="run_mavros_$(arg id)" output="screen" args="-id=$(arg id) -mode=$(arg mode) -target_ip=$(arg target_ip) -own_ip=$(arg own_ip) -ns_prefix=$(arg ns_prefix)"/>

  <!-- CUSTOM -->
  <!-- start robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="50.0"/>
    <param name="tf_prefix" type="string" value=""/>
  </node>

  <node name="ground_truth_to_tf" pkg="message_to_tf" type="message_to_tf" output="screen">
    <param name="odometry_topic" value="ground_truth/state"/>
    <param name="frame_id" value="local_origin"/>
    <param name="child_frame_id" type="string" value="base_link"/>
  </node>

  <!-- robot_description for rviz -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find robots_description)/models/$(arg robot_model)/model.xacro'"/>

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="true"/>
  </node>
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find robots_description)/config/visualize.rviz"/>

  <node pkg="tf" type="static_transform_publisher" name="world_to_map" args="0 0 0 0 0 0 /world /map 100"/>
  <node pkg="tf" type="static_transform_publisher" name="uav_1_to_base_link" args="0 0 0 0 0 0 /uav_1 /local_origin 100"/>
  <node pkg="tf" type="static_transform_publisher" name="local_origin_to_base_link" args="0 0 0 0 0 0 /local_origin /base_link 100"/>

</launch>
